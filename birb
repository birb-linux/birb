#!/bin/bash

# Check if the LFS variable is set
# If it isn't empty, it means that we are installing
# BirbOS and the LFS variable should be used as the
# installation prefix, so that all of the files end
# up into the correct directory
INSTALL_PREFIX="$LFS"

DISTFILES="$INSTALL_PREFIX/var/cache/distfiles"
REPO_DIR="$INSTALL_PREFIX/var/db/pkg"

print_help()
{
	echo "Usage: birb [OPTIONS...] [ARGUMENTS...]"
	echo ""
	echo "      --help                 display this help page and exit"
	echo "      --download PACKAGE(s)  download the source tarball for the given package"
}

if [ -z $1 ]
then
	print_help
	exit 0
fi

# Args: [file path] [checksum]
# Return values:
# 0 = Checksums match
# 1 = Checksums didn't match
checksum_check()
{
	FILE_PATH="$1"
	GOAL_CHECKSUM="$2"

	FILE_CHECKSUM="$(md5sum $DISTFILES/$TARBALL | cut -d' ' -f1)"

	# Make sure that either of the checksums aren't empty
	[ -z $GOAL_CHECKSUM ] && exit 1
	[ -z $FILE_CHECKSUM ] && exit 1

	[ "$GOAL_CHECKSUM" == "$FILE_CHECKSUM" ] && exit 0 || exit 1
}

# Download a tarball for the given package using wget
# The tarball will be stored to /var/cache/distfiles
download_src()
{
	# Source the package variables
	source $REPO_DIR/$1/seed.sh

	# Get the tarball name from the download URL
	TARBALL="$(basename $SOURCE)"

	# Check if the package tarball has already been downloaded
	# and the checksum matches
	if [ -f "$DISTFILES/$TARBALL" ]
	then
		echo "Found [$TARBALL] in distcache. Comparing checksums..."
		if [ $(checksum_check "$DISTFILES/$TARBALL" "$CHECKSUM") ]
		then
			# The tarball has already been downloaded and the download can
			# be skipped without any issues
			echo "Skipping [$1] as its already downloaded"
			exit 0
		fi
	fi

	# Download the source tarball
	wget --directory-prefix=$DISTFILES $SOURCE


	# Check the MD5 checksum
	if [ $(checksum_check "$DISTFILES/$TARBALL" "$CHECKSUM") ]
	then
		echo "WARNING! There was a checksum mismatch. The downloaded archive will be removed to prevent installing a possibly corrupt package. Please re-try downloading it"
		rm -v $DISTFILES/$TARBALL
		exit 1
	fi
}

while test $# -gt 0; do
	case $1 in
		--help)
			shift
			print_help
			exit 0
			;;

		--download)
			shift

			while test $# -gt 0; do
				download_src $1
				shift
			done

			exit 0
			;;

		*)
			echo "Invalid argument! Run 'birb --help' for help"
			exit 1
		;;
	esac
done
