#!/bin/bash

# Misc. functions used by birb and birb packages
#
# If you want to source birb packages, you might need
# to source this file first to avoid errors related to
# missing functions
#
# This file also helps to off-load some of the stuff from
# the main birb script to another file to not have one huge
# file containing everything

# Logging functions
println()
{
	case $1 in
		ERROR) echo -e "\e[31mERROR: $2\e[0m" ;;
		WARNING) echo -e "\e[35mWARNING: $2\e[0m" ;;
		*) echo -e "\e[32m=> \e[0m$*" ;;
	esac
}


# Version parsing helper functions

# Transform a version string X.X.X to X.X taking out the patch number
# Args: [version]
short_version()
{
	echo "$1" | awk -F'.' '{print $1 "." $2}'
}

# Transform a version string X.X.X to X leaving only the major version
# This will also convert version X.X to X
# Args: [version]
major_version()
{
	echo "$1" | cut -d'.' -f1
}


# Tor related functions

# Check if the package has a source URL that points to an .onion address
# Args: [url]
onion_check()
{
	grep -q "http://[A-Za-z2-7]*d.onion" <<< "$1"
}

# Check if tor is installed and running. Also make sure that torsocks is installed
tor_check()
{
	println "Checking if Tor is installed and running..."
	[ ! -f /usr/bin/tor ] && println ERROR "Tor isn't installed! Birb cannot download packages from .onion addresses without it (＞﹏＜)" && exit 1
	[ ! -f /usr/bin/torsocks ] && println ERROR "torsocks isn't installed! Birb cannot download packages from .onion addresses without it (」＞＜)」" && exit 1

	if ! pgrep -x tor &>/dev/null
	then
		println ERROR "Tor isn't running! Birb cannot download packages from .onion addresses without it (ﾉω･､)"
		exit 1
	fi
}
